<?xml version="1.0" encoding="UTF-8" ?>
<project name="PostgreSQL" id="Project-dbc" database="PostgreSQL" >
	<schema name="public" >
		<comment><![CDATA[standard public schema]]></comment>
		<table name="article" spec="" >
			<column name="article_code" type="varchar" length="15" jt="12" mandatory="y" />
			<column name="name" type="varchar" length="100" jt="12" mandatory="y" />
			<column name="default_unit" type="varchar" length="15" jt="12" mandatory="y" />
			<column name="method" type="char" length="4" jt="1" mandatory="y" />
			<index name="pk_article" unique="PRIMARY_KEY" >
				<column name="article_code" />
			</index>
			<fk name="fk_article_unit" to_schema="public" to_table="unit" options="" >
				<fk_column name="default_unit" pk="unit" />
			</fk>
			<fk name="fk_article_method" to_schema="public" to_table="method" >
				<fk_column name="method" pk="method" />
			</fk>
		</table>
		<table name="article_valid_unit" spec="" >
			<column name="article_code" prior="article_id" type="varchar" length="15" jt="12" mandatory="y" />
			<column name="unit" prior="unit_id" type="varchar" length="15" jt="12" mandatory="y" />
			<index name="pk_article_valid_unit" unique="PRIMARY_KEY" >
				<column name="article_code" />
				<column name="unit" />
			</index>
			<fk name="fk_article_valid_unit_article" to_schema="public" to_table="article" options="" >
				<fk_column name="article_code" pk="article_code" />
			</fk>
			<fk name="fk_article_valid_unit_unit" to_schema="public" to_table="unit" options="" >
				<fk_column name="unit" pk="unit" />
			</fk>
		</table>
		<table name="method" spec="" >
			<column name="method" type="char" length="4" jt="1" mandatory="y" />
			<index name="pk_method" unique="PRIMARY_KEY" >
				<column name="method" />
			</index>
		</table>
		<table name="stock_movement" prior="stock_management" >
			<column name="stock_movement_id" prior="stock_management_id" type="serial" length="32" jt="4" mandatory="y" />
			<column name="movement_date" type="date" jt="91" mandatory="y" >
				<defo><![CDATA[CURRENT_DATE]]></defo>
			</column>
			<column name="type" type="varchar" length="3" jt="12" mandatory="y" />
			<column name="article_code" type="varchar" length="15" jt="12" mandatory="y" />
			<column name="quantity" type="double precision" jt="3" mandatory="y" />
			<column name="unit_price" type="double precision" jt="3" mandatory="y" />
			<constraint name="cns_stock_movement_type" >
				<string><![CDATA[type in ('IN', 'OUT', 'REP')]]></string>
			</constraint>
			<constraint name="cns_stock_movement_qte" type="CHECK" options="" >
				<string><![CDATA[(quantity > (0)::double precision)]]></string>
			</constraint>
			<fk name="fk_stock_movement_article" to_schema="public" to_table="article" >
				<fk_column name="article_code" pk="article_code" />
			</fk>
		</table>
		<table name="unit" >
			<column name="unit" type="varchar" length="15" jt="12" mandatory="y" />
			<index name="pk_unit" unique="PRIMARY_KEY" >
				<column name="unit" />
			</index>
		</table>
		<table name="unit_conversion" >
			<column name="from_unit" type="varchar" length="15" jt="12" mandatory="y" />
			<column name="to_unit" type="varchar" length="15" jt="12" mandatory="y" />
			<column name="value" type="double precision" jt="3" mandatory="y" />
			<index name="pk_unit_conversion" unique="PRIMARY_KEY" >
				<column name="from_unit" />
				<column name="to_unit" />
			</index>
			<fk name="fk_unit_conversion_from_unit" to_schema="public" to_table="unit" options="" >
				<fk_column name="from_unit" pk="unit" />
			</fk>
			<fk name="fk_unit_conversion_to_unit" to_schema="public" to_table="unit" options="" >
				<fk_column name="to_unit" pk="unit" />
			</fk>
		</table>
	</schema>
	<layout name="Main Layout" id="Layout-260f" show_relation="columns" >
		<entity schema="public" name="article" color="BED3F4" x="51" y="170" />
		<entity schema="public" name="article_valid_unit" color="BED3F4" x="51" y="425" />
		<entity schema="public" name="method" color="3986C1" x="238" y="51" />
		<entity schema="public" name="stock_movement" color="C1D8EE" x="357" y="153" />
		<entity schema="public" name="unit" color="C1D8EE" x="221" y="289" />
		<entity schema="public" name="unit_conversion" color="C1D8EE" x="391" y="408" />
		<script name="SQL_Editor" id="Editor-25f7" language="SQL" confirmed="y" >
			<string><![CDATA[CREATE SCHEMA IF NOT EXISTS "public";

CREATE  TABLE "public".unit ( 
	unit_id              serial  NOT NULL  ,
	designation          varchar(25)  NOT NULL  ,
	CONSTRAINT pk_unit PRIMARY KEY ( unit_id ),
	CONSTRAINT unq_unit UNIQUE ( designation ) 
 );

CREATE  TABLE "public".unit_conversion ( 
	from_unit_id         integer  NOT NULL  ,
	to_unit_id           integer  NOT NULL  ,
	"value"              double precision  NOT NULL  ,
	CONSTRAINT pk_unit_conversion PRIMARY KEY ( from_unit_id, to_unit_id ),
	CONSTRAINT fk_unit_conversion_unit1 FOREIGN KEY ( from_unit_id ) REFERENCES "public".unit( unit_id )   ,
	CONSTRAINT fk_unit_conversion_unit2 FOREIGN KEY ( to_unit_id ) REFERENCES "public".unit( unit_id )   
 );

CREATE  TABLE "public".article ( 
	article_id           serial  NOT NULL  ,
	article_code         varchar(15)  NOT NULL  ,
	name                 varchar(100)  NOT NULL  ,
	default_unit_id      integer  NOT NULL  ,
	CONSTRAINT pk_article PRIMARY KEY ( article_id ),
	CONSTRAINT unq_article UNIQUE ( article_code ) 
 );

CREATE  TABLE "public".article_valid_unit ( 
	article_id           integer  NOT NULL  ,
	unit_id              integer  NOT NULL  ,
	CONSTRAINT pk_article_valid_unit PRIMARY KEY ( article_id, unit_id ),
	CONSTRAINT unq_article_valid_unit_unit_id UNIQUE ( unit_id, article_id ) 
 );

CREATE  TABLE "public"."stock movement" ( 
	stock_movement_id    serial  NOT NULL  ,
	movement_date        timestamp DEFAULT CURRENT_TIMESTAMP NOT NULL  ,
	"type"               varchar(3)  NOT NULL  ,
	article_id           integer  NOT NULL  ,
	unit_id              integer  NOT NULL  ,
	quantity             double precision  NOT NULL  ,
	CONSTRAINT "pk_stock movement" PRIMARY KEY ( stock_movement_id )
 );

ALTER TABLE "public"."stock movement" ADD CONSTRAINT "cns_stock movement_type" CHECK ( type IN ('IN', 'OUT') );

ALTER TABLE "public"."stock movement" ADD CONSTRAINT "cns_stock movement_qte" CHECK ( quantity > 0 );

ALTER TABLE "public".article ADD CONSTRAINT fk_article_unit FOREIGN KEY ( default_unit_id, article_id ) REFERENCES "public".article_valid_unit( unit_id, article_id );

ALTER TABLE "public".article_valid_unit ADD CONSTRAINT fk_article_valid_unit_article FOREIGN KEY ( article_id ) REFERENCES "public".article( article_id );

ALTER TABLE "public".article_valid_unit ADD CONSTRAINT fk_article_valid_unit_unit FOREIGN KEY ( unit_id ) REFERENCES "public".unit( unit_id );

ALTER TABLE "public"."stock movement" ADD CONSTRAINT "fk_stock movement" FOREIGN KEY ( article_id, unit_id ) REFERENCES "public".article_valid_unit( article_id, unit_id );
]]></string>
		</script>
		<script name="SQL_Editor_001" id="Editor-8dc" language="SQL" confirmed="y" >
			<string><![CDATA[CREATE SCHEMA IF NOT EXISTS "public";

CREATE  TABLE "public"."method" ( 
	"type"               char(4)  NOT NULL  ,
	CONSTRAINT pk_tbl PRIMARY KEY ( "type" )
 );

CREATE  TABLE "public".unit ( 
	"type"               varchar(15)  NOT NULL  ,
	CONSTRAINT pk_unit PRIMARY KEY ( "type" )
 );

CREATE  TABLE "public".unit_conversion ( 
	from_unit            varchar(15)  NOT NULL  ,
	to_unit              varchar(15)  NOT NULL  ,
	"value"              double precision  NOT NULL  ,
	CONSTRAINT pk_unit_conversion PRIMARY KEY ( from_unit, to_unit ),
	CONSTRAINT fk_unit_conversion_unit1 FOREIGN KEY ( from_unit ) REFERENCES "public".unit( "type" )   ,
	CONSTRAINT fk_unit_conversion_unit2 FOREIGN KEY ( to_unit ) REFERENCES "public".unit( "type" )   
 );

CREATE  TABLE "public".article ( 
	article_code         varchar(15)  NOT NULL  ,
	name                 varchar(100)  NOT NULL  ,
	default_unit_id      integer  NOT NULL  ,
	"method"             char(4)  NOT NULL  ,
	CONSTRAINT pk_article PRIMARY KEY ( article_code ),
	CONSTRAINT fk_article_method FOREIGN KEY ( "method" ) REFERENCES "public"."method"( "type" )   
 );

CREATE  TABLE "public".article_valid_unit ( 
	article_code         varchar(15)  NOT NULL  ,
	unit                 varchar(15)  NOT NULL  ,
	CONSTRAINT pk_article_valid_unit PRIMARY KEY ( article_code, unit ),
	CONSTRAINT fk_article_valid_unit_article FOREIGN KEY ( article_code ) REFERENCES "public".article( article_code )   ,
	CONSTRAINT fk_article_valid_unit_unit FOREIGN KEY ( unit ) REFERENCES "public".unit( "type" )   
 );

CREATE  TABLE "public".stock_movement ( 
	stock_movement_id    integer DEFAULT nextval('"stock movement_stock_movement_id_seq"'::regclass) NOT NULL  ,
	movement_date        timestamp(6) DEFAULT CURRENT_TIMESTAMP NOT NULL  ,
	article_code         varchar(15)  NOT NULL  ,
	unit                 varchar(15)  NOT NULL  ,
	"type"               varchar(3)  NOT NULL  ,
	quantity             double precision  NOT NULL  ,
	CONSTRAINT "fk_stock movement" FOREIGN KEY ( article_code, unit ) REFERENCES "public".article_valid_unit( article_code, unit )   
 );

ALTER TABLE "public".stock_movement ADD CONSTRAINT "CK_stock movement" CHECK ( ((type)::text = ANY ((ARRAY['IN'::character varying, 'OUT'::character varying])::text[])) );

ALTER TABLE "public".stock_movement ADD CONSTRAINT "CK_stock movement_001" CHECK ( (quantity > (0)::double precision) );

COMMENT ON TABLE "public"."method" IS 'method type : FIFO, LIFO ...';
]]></string>
		</script>
		<script name="SQL_Editor_002" id="Editor-5c9" language="SQL" confirmed="y" >
			<string><![CDATA[CREATE SCHEMA IF NOT EXISTS "public";

CREATE  TABLE "public"."method" ( 
	"type"               char(4)  NOT NULL  ,
	CONSTRAINT pk_tbl PRIMARY KEY ( "type" )
 );

CREATE  TABLE "public".unit ( 
	"type"               varchar(15)  NOT NULL  ,
	CONSTRAINT pk_unit PRIMARY KEY ( "type" )
 );

CREATE  TABLE "public".unit_conversion ( 
	from_unit            varchar(15)  NOT NULL  ,
	to_unit              varchar(15)  NOT NULL  ,
	"value"              double precision  NOT NULL  ,
	CONSTRAINT pk_unit_conversion PRIMARY KEY ( from_unit, to_unit ),
	CONSTRAINT fk_unit_conversion_unit1 FOREIGN KEY ( from_unit ) REFERENCES "public".unit( "type" )   ,
	CONSTRAINT fk_unit_conversion_unit2 FOREIGN KEY ( to_unit ) REFERENCES "public".unit( "type" )   
 );

CREATE  TABLE "public".article ( 
	article_code         varchar(15)  NOT NULL  ,
	name                 varchar(100)  NOT NULL  ,
	default_unit_id      integer  NOT NULL  ,
	"method"             char(4)  NOT NULL  ,
	CONSTRAINT pk_article PRIMARY KEY ( article_code ),
	CONSTRAINT fk_article_method FOREIGN KEY ( "method" ) REFERENCES "public"."method"( "type" )   
 );

CREATE  TABLE "public".article_valid_unit ( 
	article_code         varchar(15)  NOT NULL  ,
	unit                 varchar(15)  NOT NULL  ,
	CONSTRAINT pk_article_valid_unit PRIMARY KEY ( article_code, unit ),
	CONSTRAINT fk_article_valid_unit_article FOREIGN KEY ( article_code ) REFERENCES "public".article( article_code )   ,
	CONSTRAINT fk_article_valid_unit_unit FOREIGN KEY ( unit ) REFERENCES "public".unit( "type" )   
 );

CREATE  TABLE "public".stock_movement ( 
	stock_movement_id    bigserial  NOT NULL  ,
	movement_date        date DEFAULT CURRENT_DATE NOT NULL  ,
	"type"               varchar(3)  NOT NULL  ,
	article_code         varchar(15)  NOT NULL  ,
	quantity             double precision  NOT NULL  ,
	unit_price           double precision  NOT NULL  ,
	CONSTRAINT pk_stock_movement PRIMARY KEY ( stock_movement_id ),
	CONSTRAINT fk_stock_movement_article FOREIGN KEY ( article_code ) REFERENCES "public".article( article_code )   
 );

ALTER TABLE "public".stock_movement ADD CONSTRAINT cns_stock_movement_type CHECK ( type in ('IN', 'OUT') );

ALTER TABLE "public".stock_movement ADD CONSTRAINT cns_stock_movement_quantity_and_unit_price CHECK ( quantity > 0 AND unit_price > 0 );

COMMENT ON TABLE "public"."method" IS 'method type : FIFO, LIFO ...';
]]></string>
		</script>
		<script name="SQL_Editor_003" id="Editor-12d5" language="SQL" >
			<string><![CDATA[CREATE SCHEMA IF NOT EXISTS "public";

CREATE SEQUENCE "public".stock movement_stock_movement_id_seq AS integer START WITH 1 INCREMENT BY 1;

CREATE SEQUENCE "public"."stock movement_stock_movement_id_seq" START WITH 1 INCREMENT BY 1;

CREATE  TABLE "public"."method" ( 
	"type"               char(4)  NOT NULL  ,
	CONSTRAINT pk_tbl PRIMARY KEY ( "type" )
 );

CREATE  TABLE "public".unit ( 
	"type"               varchar(15)  NOT NULL  ,
	CONSTRAINT pk_unit PRIMARY KEY ( "type" )
 );

CREATE  TABLE "public".unit_conversion ( 
	from_unit            varchar(15)  NOT NULL  ,
	to_unit              varchar(15)  NOT NULL  ,
	"value"              double precision  NOT NULL  ,
	CONSTRAINT pk_unit_conversion PRIMARY KEY ( from_unit, to_unit ),
	CONSTRAINT fk_unit_conversion_unit1 FOREIGN KEY ( from_unit ) REFERENCES "public".unit( "type" )   ,
	CONSTRAINT fk_unit_conversion_unit2 FOREIGN KEY ( to_unit ) REFERENCES "public".unit( "type" )   
 );

CREATE  TABLE "public".article ( 
	article_code         varchar(15)  NOT NULL  ,
	name                 varchar(100)  NOT NULL  ,
	"method"             char(4)  NOT NULL  ,
	CONSTRAINT pk_article PRIMARY KEY ( article_code ),
	CONSTRAINT fk_article_method FOREIGN KEY ( "method" ) REFERENCES "public"."method"( "type" )   
 );

CREATE  TABLE "public".article_valid_unit ( 
	article_code         varchar(15)  NOT NULL  ,
	unit                 varchar(15)  NOT NULL  ,
	CONSTRAINT pk_article_valid_unit PRIMARY KEY ( article_code, unit ),
	CONSTRAINT fk_article_valid_unit_article FOREIGN KEY ( article_code ) REFERENCES "public".article( article_code )   ,
	CONSTRAINT fk_article_valid_unit_unit FOREIGN KEY ( unit ) REFERENCES "public".unit( "type" )   
 );

CREATE  TABLE "public".stock_movement ( 
	stock_movement_id    bigserial  NOT NULL  ,
	movement_date        date DEFAULT CURRENT_DATE NOT NULL  ,
	"type"               varchar(3)  NOT NULL  ,
	article_code         varchar(15)  NOT NULL  ,
	quantity             double precision  NOT NULL  ,
	unit_price           double precision  NOT NULL  ,
	CONSTRAINT pk_stock_movement PRIMARY KEY ( stock_movement_id ),
	CONSTRAINT fk_stock_movement_article FOREIGN KEY ( article_code ) REFERENCES "public".article( article_code )   
 );

ALTER TABLE "public".stock_movement ADD CONSTRAINT cns_stock_movement_type CHECK ( type in ('IN', 'OUT', 'REP') );

ALTER TABLE "public".stock_movement ADD CONSTRAINT cns_stock_movement_quantity_and_unit_price CHECK ( quantity > 0 AND unit_price > 0 );

COMMENT ON TABLE "public"."method" IS 'method type : FIFO, LIFO ...';
]]></string>
		</script>
	</layout>
</project>